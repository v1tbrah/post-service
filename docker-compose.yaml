version: '3.8'

volumes:
  storage-data: {}

networks:
  default-network:
    driver: bridge

services:

  post-service:
    container_name: post-service
    depends_on:
      post-service-storage:
        condition: service_healthy
      kafka:
        condition: service_started
    build:
        dockerfile: Dockerfile
    environment:
      - GRPC_HOST=0.0.0.0
      - GRPC_PORT=5050
      - LOG_LVL=info
      - STORAGE_HOST=post-service-storage
      - STORAGE_PORT=5432
      - STORAGE_USER=postgres
      - STORAGE_PASSWORD=postgres
      - POST_DB_NAME=postgres
      - POST_TABLE_NAME=post
      - HASHTAG_TABLE_NAME=hashtag
      - HASHTAG_PER_POST_TABLE_NAME=hashtag_per_post
      - KAFKA_HOST=kafka
      - KAFKA_PORT=9092
    ports:
      - "5050:5050"
    networks:
      - default-network

  post-service-storage:
    image: postgres:latest
    container_name: post-service-storage
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 2s
      timeout: 1s
      retries: 5
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - storage-data:/var/lib/postgresql/data
    networks:
      - default-network

  zookeeper:
    hostname: zookeeper
    image: wurstmeister/zookeeper:3.4.6
    networks:
      - default-network

  kafka:
    image: wurstmeister/kafka
    env_file:
      - config/kafka-variables.env
    depends_on:
      - zookeeper
    networks:
      - default-network
